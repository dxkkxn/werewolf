{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { useState } from 'react';\nimport { useFonts } from 'expo-font';\nimport { useNavigation } from '@react-navigation/native';\nimport Card from \"./Card.js\";\nimport Avatar from \"./Avatar.js\";\nimport { MyButton } from \"./MyButton.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar url = \"http://\" + window.location.hostname + \":3000\";\nvar avatar1 = require(\"../assets/images/avatar1.png\");\nvar avatar2 = require(\"../assets/images/avatar2.png\");\nvar avatar3 = require(\"../assets/images/avatar3.png\");\nvar avatar4 = require(\"../assets/images/avatar4.png\");\nvar avatar5 = require(\"../assets/images/avatar5.png\");\nvar avatar6 = require(\"../assets/images/avatar6.png\");\nvar avatar7 = require(\"../assets/images/avatar7.png\");\nvar avatar8 = require(\"../assets/images/avatar8.png\");\nvar avatar9 = require(\"../assets/images/avatar9.png\");\nvar avatar10 = require(\"../assets/images/avatar10.png\");\nvar avatar11 = require(\"../assets/images/avatar11.png\");\nvar avatar12 = require(\"../assets/images/avatar12.png\");\nexport default function Avatars(_ref) {\n  var route = _ref.route;\n  var navigation = useNavigation();\n  var avatars = [avatar1, avatar2, avatar3, avatar4, avatar5, avatar6, avatar7, avatar8, avatar9, avatar10, avatar11, avatar12];\n  var _useState = useState(0),\n    _useState2 = _slicedToArray(_useState, 2),\n    avatarId = _useState2[0],\n    setAvatarId = _useState2[1];\n  var _useState3 = useState(avatars.map(function () {\n      return false;\n    })),\n    _useState4 = _slicedToArray(_useState3, 2),\n    Clicked = _useState4[0],\n    setClicked = _useState4[1];\n  var _useFonts = useFonts({\n      'Poppins': require(\"../assets/fonts/Poppins-Regular.ttf\")\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    loaded = _useFonts2[0];\n  if (!loaded) {\n    return null;\n  }\n  var username = route.params.username;\n  var token = route.params.token;\n  var handleClick = function handleClick(id) {\n    setAvatarId(id + 1);\n    var newClicked = avatars.map(function () {\n      return false;\n    });\n    newClicked[id] = true;\n    setClicked(newClicked);\n  };\n  var handleContinue = function handleContinue(avatarId) {\n    fetch(url + \"/users/\" + username, {\n      method: 'PUT',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    navigation.navigate('Welcome', {\n      username: username,\n      token: token\n    });\n  };\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Choisissez un Avatar\"\n    }), _jsx(ScrollView, {\n      children: _jsx(View, {\n        style: styles.containerAvatar,\n        children: avatars.map(function (avatar, index) {\n          return _jsx(Avatar, {\n            source: avatar,\n            onPress: function onPress() {\n              return handleClick(index);\n            },\n            clicked: Clicked[index]\n          }, index);\n        })\n      })\n    }), _jsx(MyButton, {\n      label: \"Continuer\",\n      primary: true,\n      onPress: function onPress() {\n        return handleContinue(avatarId);\n      }\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    height: \"80%\",\n    top: 64,\n    alignItems: 'center',\n    justifyContent: 'space-around'\n  },\n  containerAvatar: {\n    width: \"100%\",\n    height: \"100%\",\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(3,1fr)\",\n    padding: \"15px\",\n    gap: \"15px\"\n  },\n  title: {\n    color: '#ffffff',\n    fontSize: 28,\n    fontFamily: 'Poppins'\n  }\n});","map":{"version":3,"names":["StatusBar","StyleSheet","Text","View","Image","Pressable","TouchableOpacity","ScrollView","useState","useFonts","useNavigation","Card","Avatar","MyButton","jsx","_jsx","jsxs","_jsxs","url","window","location","hostname","avatar1","require","avatar2","avatar3","avatar4","avatar5","avatar6","avatar7","avatar8","avatar9","avatar10","avatar11","avatar12","Avatars","_ref","route","navigation","avatars","_useState","_useState2","_slicedToArray","avatarId","setAvatarId","_useState3","map","_useState4","Clicked","setClicked","_useFonts","_useFonts2","loaded","username","params","token","handleClick","id","newClicked","handleContinue","fetch","method","headers","navigate","style","styles","container","children","title","containerAvatar","avatar","index","source","onPress","clicked","label","primary","create","height","top","alignItems","justifyContent","width","display","gridTemplateColumns","padding","gap","color","fontSize","fontFamily"],"sources":["/home/ennouaimi/PROJET/LoupGarouWeb/components/AvailableAvatars.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View, Image, Pressable , TouchableOpacity , ScrollView} from 'react-native';\nimport {useState} from 'react';\nimport { useFonts } from 'expo-font';\nimport { useNavigation } from '@react-navigation/native';\nimport Card from './Card.js';\nimport Avatar from './Avatar.js'\nimport { MyButton } from \"./MyButton.js\";\n\nconst url = `http://${window.location.hostname}:3000`\n\nconst avatar1 = require(\"../assets/images/avatar1.png\"); \nconst avatar2 = require(\"../assets/images/avatar2.png\");\nconst avatar3 = require(\"../assets/images/avatar3.png\"); \nconst avatar4 = require(\"../assets/images/avatar4.png\");\nconst avatar5 = require(\"../assets/images/avatar5.png\"); \nconst avatar6 = require(\"../assets/images/avatar6.png\");\nconst avatar7 = require(\"../assets/images/avatar7.png\"); \nconst avatar8 = require(\"../assets/images/avatar8.png\");\nconst avatar9 = require(\"../assets/images/avatar9.png\"); \nconst avatar10 = require(\"../assets/images/avatar10.png\");\nconst avatar11 = require(\"../assets/images/avatar11.png\"); \nconst avatar12 = require(\"../assets/images/avatar12.png\");\n\n\nexport default function Avatars({ route }) {\n  const navigation = useNavigation()\n  const avatars = [\n    avatar1,\n    avatar2,\n    avatar3,\n    avatar4,\n    avatar5,\n    avatar6,\n    avatar7,\n    avatar8,\n    avatar9,\n    avatar10,\n    avatar11,\n    avatar12,\n  ];\n\n  const [avatarId, setAvatarId] = useState(0);\n  const [Clicked, setClicked] = useState(avatars.map(() => false));\n  \n\n\n  const [loaded] = useFonts({\n    'Poppins': require('../assets/fonts/Poppins-Regular.ttf'),\n  });\n  if (!loaded) {\n    return null;\n  }\n  const username = route.params.username;\n  const token = route.params.token;\n  const handleClick = (id) => {\n    setAvatarId(id+1)\n    const newClicked = avatars.map(() => false);\n    newClicked[id] = true;\n    setClicked(newClicked)\n  };\n  const handleContinue = (avatarId) => {\n    fetch(`${url}/users/${username}` ,{\n        method: 'PUT',\n        headers: {\n              'Content-Type': 'application/json'\n        },\n        \n      })\n    navigation.navigate('Welcome', {username : username, token: token})\n  };\n\treturn ( \n        <View style={styles.container}>\n\t\t\t<Text style={styles.title}>Choisissez un Avatar</Text>\n            <ScrollView>\n                <View style={styles.containerAvatar}>\n                \n                {avatars.map((avatar,index) => (\n                    <Avatar source={avatar} onPress={() => handleClick(index)} key={index} clicked ={Clicked[index]}/>\n                ))}\n                </View>\n            </ScrollView>\n            <MyButton label=\"Continuer\" primary={true} onPress={() => handleContinue(avatarId)} />   \n        </View>\n        \n        \n        \n\t);\n}\nconst styles = StyleSheet.create({\n  container: {\n    height: \"80%\",\n    top: 64,\n    alignItems: 'center',\n    justifyContent: 'space-around',\n    },\n  containerAvatar: {\n    width: \"100%\",\n    height: \"100%\",\n    display: \"grid\",\n    gridTemplateColumns: \"repeat(3,1fr)\",\n    // gridTemplateRows: \"2fr\",\n    padding: \"15px\",\n    gap: \"15px\",\n    // marginBottom: \"-10px\",\n  },\n  title: {\n    color: '#ffffff',\n    fontSize: 28,\n    fontFamily: 'Poppins'\n  },\n})\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}