{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { useFonts } from 'expo-font';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar url = \"http://\" + window.location.hostname + \":3000\";\nvar avatarId;\nfunction importAll(r) {\n  var images = {};\n  r.keys().map(function (item, index) {\n    images[item.replace('./', '')] = r(item);\n  });\n  return images;\n}\nfunction fetchAvatarId(_x) {\n  return _fetchAvatarId.apply(this, arguments);\n}\nfunction _fetchAvatarId() {\n  _fetchAvatarId = _asyncToGenerator(function* (username) {\n    try {\n      var response = yield fetch(url + \"/users/\" + username, {\n        method: 'GET',\n        headers: {\n          'Content-Type': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error('Response was not ok');\n      }\n      var data = yield response.json();\n      var _avatarId = data.data.avatarId;\n      return _avatarId;\n    } catch (error) {\n      console.error('Error fetching user data:', error);\n    }\n  });\n  return _fetchAvatarId.apply(this, arguments);\n}\nexport function AvailableGame(_ref) {\n  var gameProps = _ref.gameProps;\n  var _useFonts = useFonts({\n      'Poppins': require(\"../assets/fonts/Poppins-Regular.ttf\")\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    loaded = _useFonts2[0];\n  if (!loaded) {\n    return null;\n  }\n  fetchAvatarId(gameProps.creatorUsername).then(function (avatarId) {\n    console.log(avatarId);\n  });\n  var arrow = require(\"../assets/images/rightArrow.png\");\n  var icon = require(\"../assets/images/avatar8.png\");\n  return _jsxs(View, {\n    style: styles.rectangle,\n    children: [_jsxs(View, {\n      style: styles.leftPart,\n      children: [_jsx(Image, {\n        source: icon,\n        style: styles.image\n      }), _jsxs(Text, {\n        style: styles.text,\n        children: [\" \", gameProps.username, \" \"]\n      })]\n    }), _jsxs(View, {\n      style: styles.rightPart,\n      children: [_jsxs(\"ul\", {\n        style: styles.paramList,\n        children: [_jsxs(\"li\", {\n          children: [\" Cr\\xE9\\xE9e par \", gameProps.creatorUsername, \" \"]\n        }), _jsxs(\"li\", {\n          children: [\" Debut a \", gameProps.startHour, \"h dans \", gameProps.startDay, \" jours\"]\n        }), _jsxs(\"li\", {\n          children: [\" De \", gameProps.minPlayers, \" \\xE0 \", gameProps.maxPlayers, \" joueurs\"]\n        }), _jsxs(\"li\", {\n          children: [\" Jour: \", gameProps.dayDuration, \" min, Nuit: \", gameProps.nightDuration, \" min \"]\n        }), _jsxs(\"li\", {\n          children: [\" C: \", gameProps.infectionProbability, \", I:\", gameProps.insomniaProbability, \", V:\", gameProps.seerProbability, \", S:\", gameProps.spiritismProbability, \" \"]\n        }), _jsxs(\"li\", {\n          children: [\" Proportion de loups : \", gameProps.werewolfProbability, \" \"]\n        })]\n      }), _jsx(TouchableOpacity, {\n        style: styles.arrowBox,\n        children: _jsx(Image, {\n          style: styles.arrowStyle,\n          source: arrow\n        })\n      })]\n    })]\n  });\n}\n;\nvar styles = StyleSheet.create({\n  arrowBox: {\n    height: '40px',\n    width: '50px',\n    backgroundColor: '#7858a6',\n    borderTopLeftRadius: 10,\n    borderBottomLeftRadius: 0,\n    borderTopRightRadius: 0,\n    borderBottomRightRadius: 10,\n    justifyContent: 'center',\n    position: 'absolute',\n    bottom: 0,\n    right: 0\n  },\n  arrowStyle: {\n    width: '28px',\n    height: '20px',\n    alignSelf: 'center'\n  },\n  rectangle: {\n    flexDirection: 'row',\n    height: '190px',\n    marginBottom: 15,\n    width: '350px',\n    backgroundColor: 'rgba(120, 88, 166, 0.3)',\n    borderRadius: 10\n  },\n  rightPart: {\n    display: 'flex',\n    flex: 3,\n    backgrounfColor: 'white',\n    alignItems: 'left'\n  },\n  leftPart: {\n    flex: 2,\n    backgrounfColor: 'white',\n    alignItems: 'center'\n  },\n  image: {\n    width: '100px',\n    height: '100px',\n    alignSelf: 'center',\n    top: 9\n  },\n  text: {\n    color: '#ffffff',\n    fontSize: 18,\n    fontFamily: 'Poppins',\n    marginTop: 13,\n    fontWeight: 800\n  },\n  paramList: {\n    color: '#ffffff',\n    fontFamily: 'Poppins',\n    fontStyle: 'normal',\n    fontWeight: 700,\n    fontSize: 14,\n    paddingLeft: 20\n  }\n});","map":{"version":3,"names":["useFonts","jsx","_jsx","jsxs","_jsxs","url","window","location","hostname","avatarId","importAll","r","images","keys","map","item","index","replace","fetchAvatarId","_x","_fetchAvatarId","apply","arguments","_asyncToGenerator","username","response","fetch","method","headers","ok","Error","data","json","error","console","AvailableGame","_ref","gameProps","_useFonts","require","_useFonts2","_slicedToArray","loaded","creatorUsername","then","log","arrow","icon","View","style","styles","rectangle","children","leftPart","Image","source","image","Text","text","rightPart","paramList","startHour","startDay","minPlayers","maxPlayers","dayDuration","nightDuration","infectionProbability","insomniaProbability","seerProbability","spiritismProbability","werewolfProbability","TouchableOpacity","arrowBox","arrowStyle","StyleSheet","create","height","width","backgroundColor","borderTopLeftRadius","borderBottomLeftRadius","borderTopRightRadius","borderBottomRightRadius","justifyContent","position","bottom","right","alignSelf","flexDirection","marginBottom","borderRadius","display","flex","backgrounfColor","alignItems","top","color","fontSize","fontFamily","marginTop","fontWeight","fontStyle","paddingLeft"],"sources":["/home/ennouaimi/PROJET/LoupGarouWeb/components/AvailableGame.js"],"sourcesContent":["import { StyleSheet, Image, TouchableOpacity, View, Text} from 'react-native';\nimport { useFonts } from 'expo-font';\nconst url = `http://${window.location.hostname}:3000`\nlet avatarId ;\nfunction importAll(r) {\n  let images = {};\n  r.keys().map((item, index) => { images[item.replace('./', '')] = r(item); });\n  return images;\n}\n\nasync function fetchAvatarId(username) {\n  try {\n    const response = await fetch(`${url}/users/${username}`, {\n      method: 'GET',\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    if (!response.ok) {\n      throw new Error('Response was not ok');\n    }\n    const data = await response.json();\n    const avatarId = data.data.avatarId;\n    return avatarId;\n  } catch (error) {\n    console.error('Error fetching user data:', error);\n  }\n}\n \nexport function AvailableGame ({gameProps}) {\n  const [loaded] = useFonts({\n    'Poppins': require('../assets/fonts/Poppins-Regular.ttf'),\n  });\n\n  if (!loaded) {\n    return null;\n  }\n  fetchAvatarId(gameProps.creatorUsername)\n  .then(avatarId => {\n    // const icon = require(`../assets/images/avatar${avatarId}.png`);\n    console.log(avatarId); \n  });\n\n  // const icon = require(`../assets/images/avatar${avatarId}.png`);\n\n  const arrow = require('../assets/images/rightArrow.png');\n  const icon = require('../assets/images/avatar8.png');\n  return(\n    <View style={styles.rectangle}>\n      <View style={styles.leftPart}>\n        <Image source={icon} style={styles.image}/>\n        <Text style={styles.text}> {gameProps.username} </Text>\n      </View>\n      <View style={styles.rightPart}>\n        <ul style={styles.paramList}>\n          <li> Créée par {gameProps.creatorUsername} </li>\n          <li> Debut a {gameProps.startHour}h dans {gameProps.startDay} jours</li>\n          <li> De {gameProps.minPlayers} à {gameProps.maxPlayers} joueurs</li>\n          <li> Jour: {gameProps.dayDuration} min, Nuit: {gameProps.nightDuration} min </li>\n          <li> C: {gameProps.infectionProbability}, I:{gameProps.insomniaProbability}, V:{gameProps.seerProbability}, S:{gameProps.spiritismProbability} </li>\n          <li> Proportion de loups : {gameProps.werewolfProbability} </li>\n        </ul>\n        <TouchableOpacity style={styles.arrowBox}>\n          <Image style={styles.arrowStyle} source={arrow}/>\n        </TouchableOpacity>\n      </View>\n    </View>\n  ); \n};\n\n\nconst styles = StyleSheet.create({\n  arrowBox: {\n    height: '40px',\n    width: '50px',\n    backgroundColor: '#7858a6',\n    borderTopLeftRadius: 10, \n    borderBottomLeftRadius: 0, \n    borderTopRightRadius: 0, \n    borderBottomRightRadius: 10,\n    justifyContent: 'center',\n    position: 'absolute',\n    bottom: 0,\n    right: 0,\n  },\n  arrowStyle: {\n    width:'28px', \n    height:'20px',\n    alignSelf: 'center',\n  },\n  rectangle: {\n    flexDirection:'row',\n    height: '190px',\n    marginBottom: 15,\n    width: '350px',\n    backgroundColor: 'rgba(120, 88, 166, 0.3)',\n    borderRadius: 10,\n  },\n  rightPart:{\n    display: 'flex',\n    flex:3,\n    backgrounfColor: 'white',\n    alignItems: 'left',\n  },\n  leftPart:{\n    flex:2,\n    backgrounfColor: 'white',\n    alignItems: 'center',\n  },\n  image: {\n    width: '100px',\n    height: '100px',\n    alignSelf: 'center',\n    top:9,\n  },\n  text: {\n    color: '#ffffff',\n    fontSize: 18,\n    fontFamily: 'Poppins',\n    marginTop: 13,\n    fontWeight: 800,\n  },\n  paramList: {\n    color: '#ffffff',\n    fontFamily: 'Poppins',\n    fontStyle: 'normal',\n    fontWeight: 700,\n    fontSize: 14,\n    paddingLeft:20,\n  },\n});\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}