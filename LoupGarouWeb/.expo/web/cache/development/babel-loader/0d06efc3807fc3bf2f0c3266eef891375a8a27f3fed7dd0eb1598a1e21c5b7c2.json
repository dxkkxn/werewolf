{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from \"expo-status-bar\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Banner } from \"./Banner.js\";\nimport { useState } from \"react\";\nimport { MyButton } from \"./MyButton.js\";\nimport { InputField } from \"./InputField.js\";\nimport { useFonts } from \"expo-font\";\nimport { useNavigation } from '@react-navigation/native';\nimport Partie from \"../components/Partie.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar url = \"http://\" + window.location.hostname + \":3000\";\nfunction LoginReq(username, password, navigation) {\n  if (password === '' || username === '') {\n    alert(\"renseignez tous les champs\");\n    return -1;\n  }\n  fetch(url + \"/login\", {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      username: username,\n      password: password\n    })\n  }).then(function (response) {\n    if (response.ok) {\n      return response.json();\n    } else {\n      alert('login failed');\n      throw new Error('login failed.');\n    }\n  }).then(function (data) {\n    alert(\"login ok\");\n    navigation.navigate('Welcome', {\n      username: username,\n      token: data.token\n    });\n  }).catch(function (error) {\n    return console.error(error);\n  });\n}\n;\nfunction SignInReq(username, password, passwordConf) {\n  if (password === '' || username === '' || passwordConf === '') {\n    alert(\"renseignez tous les champs\");\n    return -1;\n  }\n  if (password !== passwordConf) {\n    alert(\"mots de passe différents\");\n    return -1;\n  }\n  if (password.length < 8) {\n    alert(\"mot de passe trop court\");\n    return -1;\n  }\n  fetch(url + \"/signin\", {\n    method: 'POST',\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      username: username,\n      password: password\n    })\n  }).then(function (response) {\n    if (response.status == 201) alert(\"user created\");else alert(\"failure\");\n  }).catch(function (error) {\n    return console.error(error);\n  });\n}\nfunction LockScreen() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    connect = _useState2[0],\n    setConnect = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    username = _useState4[0],\n    setUsername = _useState4[1];\n  var _useState5 = useState(\"\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    password = _useState6[0],\n    setPassword = _useState6[1];\n  var _useState7 = useState(\"\"),\n    _useState8 = _slicedToArray(_useState7, 2),\n    passwordConf = _useState8[0],\n    setPasswordConf = _useState8[1];\n  var navigation = useNavigation();\n  var onPressDejainscrit = function onPressDejainscrit() {\n    setConnect(true);\n  };\n  var onPressCo = function onPressCo() {};\n  var onPressCreerCompte = function onPressCreerCompte() {};\n  var handlePasswordConfirm = function handlePasswordConfirm(passwordInput) {\n    setPasswordConf(passwordInput);\n  };\n  var handlePassword = function handlePassword(passwordInput) {\n    setPassword(passwordInput);\n  };\n  var handleUsername = function handleUsername(usernameInput) {\n    setUsername(usernameInput);\n  };\n  var pwdOublie,\n    pwdConfirm,\n    ConnexionButton,\n    dejaInscrit,\n    onPressCreate = null;\n  var _useFonts = useFonts({\n      Poppins: require(\"../assets/fonts/Poppins-Regular.ttf\")\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    loaded = _useFonts2[0];\n  if (!loaded) {\n    return null;\n  }\n  if (!connect) {\n    onPressCreate = function onPressCreate() {\n      SignInReq(username, password, passwordConf);\n    };\n    pwdConfirm = _jsx(InputField, {\n      placeholder: \"Confirmer mot de passe\",\n      secureTextEntry: true,\n      onChangeText: handlePasswordConfirm,\n      login: true\n    });\n    dejaInscrit = _jsx(Pressable, {\n      onPress: function onPress() {\n        return setConnect(true);\n      },\n      children: _jsx(Text, {\n        style: styles.textPressable,\n        children: \"D\\xE9j\\xE0 inscrit ? Se connecter\"\n      })\n    });\n  } else {\n    onPressCreate = function onPressCreate() {\n      setConnect(false);\n    };\n    onPressCo = LoginReq;\n    pwdOublie = _jsx(Pressable, {\n      children: _jsx(Text, {\n        style: styles.textPressable,\n        children: \"Mot de passe oubli\\xE9 ?\"\n      })\n    });\n    ConnexionButton = _jsx(MyButton, {\n      onPress: function onPress() {\n        return onPressCo(username, password, navigation);\n      },\n      label: \"Connexion\",\n      primary: false\n    });\n  }\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Banner, {}), _jsxs(View, {\n      children: [_jsx(InputField, {\n        placeholder: \"Identifiant\",\n        secureTextEntry: false,\n        onChangeText: handleUsername,\n        login: true\n      }), _jsx(InputField, {\n        placeholder: \"Mot De Passe\",\n        secureTextEntry: true,\n        onChangeText: handlePassword,\n        login: true\n      }), pwdConfirm]\n    }), ConnexionButton, _jsx(MyButton, {\n      label: \"Cr\\xE9er un compte\",\n      primary: true,\n      onPress: onPressCreate\n    }), dejaInscrit, pwdOublie]\n  });\n}\nexport default LockScreen;\nvar styles = StyleSheet.create({\n  container: {\n    height: \"70%\",\n    alignItems: \"center\",\n    justifyContent: \"space-around\",\n    top: 64\n  },\n  textPressable: {\n    fontSize: 18,\n    textDecorationLine: \"underline\",\n    color: \"#7858a6\",\n    fontFamily: \"Poppins\"\n  }\n});","map":{"version":3,"names":["StatusBar","Button","Pressable","StyleSheet","Text","View","Banner","useState","MyButton","InputField","useFonts","useNavigation","Partie","jsx","_jsx","jsxs","_jsxs","url","window","location","hostname","LoginReq","username","password","navigation","alert","fetch","method","headers","body","JSON","stringify","then","response","ok","json","Error","data","navigate","token","catch","error","console","SignInReq","passwordConf","length","status","LockScreen","_useState","_useState2","_slicedToArray","connect","setConnect","_useState3","_useState4","setUsername","_useState5","_useState6","setPassword","_useState7","_useState8","setPasswordConf","onPressDejainscrit","onPressCo","onPressCreerCompte","handlePasswordConfirm","passwordInput","handlePassword","handleUsername","usernameInput","pwdOublie","pwdConfirm","ConnexionButton","dejaInscrit","onPressCreate","_useFonts","Poppins","require","_useFonts2","loaded","placeholder","secureTextEntry","onChangeText","login","onPress","children","style","styles","textPressable","label","primary","container","create","height","alignItems","justifyContent","top","fontSize","textDecorationLine","color","fontFamily"],"sources":["/home/ennouaimi/PROJET/LoupGarouWeb/components/LockScreen.js"],"sourcesContent":["import { StatusBar } from \"expo-status-bar\";\nimport { Button, Pressable, StyleSheet, Text, View } from \"react-native\";\nimport { Banner } from \"./Banner.js\";\nimport { useState } from \"react\";\nimport { MyButton } from \"./MyButton.js\";\nimport { InputField } from \"./InputField.js\";\nimport { useFonts } from \"expo-font\";\nimport { useNavigation } from '@react-navigation/native';\nimport Partie from \"../components/Partie.js\";\n\nconst url = `http://${window.location.hostname}:3000`\n\nfunction LoginReq(username, password, navigation){\n  if(password === '' || username === ''){\n    alert(\"renseignez tous les champs\");\n    return -1;\n  }\n  fetch(`${url}/login` ,{\n    method: 'POST',\n    headers: {\n          'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      username: username,\n      password: password\n    })\n  })\n  .then((response) => {\n    if (response.ok) {\n      return response.json();\n    } else {\n      alert('login failed');\n      throw new Error('login failed.');\n    }\n  })\n  .then(data => {\n    // Do something with the data\n      alert (\"login ok\");\n      navigation.navigate('Welcome', {username: username, token: data.token});\n  })\n  .catch(error => console.error(error)); \n};\n\n\nfunction SignInReq(username, password, passwordConf){\n  if(password === '' || username === '' || passwordConf === ''){\n    alert(\"renseignez tous les champs\");\n    return -1;\n  }\n  if(password !== passwordConf){\n    alert(\"mots de passe différents\")\n  return -1;\n  }\n  if(password.length < 8){\n    alert(\"mot de passe trop court\");\n    return -1;\n  }\n  fetch(`${url}/signin`, {\n    method: 'POST',\n    headers: {\n          'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n        username: username,\n        password: password\n    })\n  })\n  .then(response => {\n    if(response.status==201) alert(\"user created\");\n    else alert(\"failure\");\n  })\n  .catch(error => console.error(error));\n}\n\nfunction LockScreen() {\n  const [connect, setConnect] = useState(false);\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordConf, setPasswordConf] = useState(\"\");\n  const navigation = useNavigation();\n  const onPressDejainscrit = () => {\n    setConnect(true);\n  };\n  let onPressCo = () => {};\n  const onPressCreerCompte = () => {};\n\n  const handlePasswordConfirm = (passwordInput) => {\n    setPasswordConf(passwordInput);\n  };\n  const handlePassword = (passwordInput) => {\n    setPassword(passwordInput);\n  };\n  const handleUsername = (usernameInput) => {\n    setUsername(usernameInput);\n  };\n\n  //variables pour l'affichage conditionnel de certains InputField et Pressables\n  let pwdOublie,\n    pwdConfirm,\n    ConnexionButton,\n    dejaInscrit,\n    onPressCreate = null;\n\n  const [loaded] = useFonts({\n    Poppins: require(\"../assets/fonts/Poppins-Regular.ttf\"),\n  });\n\n  if (!loaded) {\n    return null;\n  }\n\n  if (!connect) {\n    onPressCreate = () => {\n      SignInReq(username, password, passwordConf);\n    }; //actual account creation process\n    pwdConfirm = (\n      <InputField\n        placeholder=\"Confirmer mot de passe\"\n        secureTextEntry={true}\n        onChangeText={handlePasswordConfirm}\n        login={true}\n      />\n    );\n    dejaInscrit = (\n      <Pressable onPress={() => setConnect(true)}>\n        <Text style={styles.textPressable}>Déjà inscrit ? Se connecter</Text>\n      </Pressable>\n    );\n  } else {\n    onPressCreate = () => {\n      setConnect(false);\n    };\n    onPressCo = LoginReq;\n    pwdOublie = (\n      <Pressable>\n        <Text style={styles.textPressable}>Mot de passe oublié ?</Text>\n      </Pressable>\n    );\n    ConnexionButton = <MyButton onPress={()=>onPressCo(username, password, navigation)} label=\"Connexion\" primary={false} />;\n  }\n  // if (true) {\n  //   return <Partie time={\"day\"} />;\n  // }\n\n  return (\n    <View style={styles.container}>\n      <Banner />\n      <View>\n        <InputField\n          placeholder=\"Identifiant\"\n          secureTextEntry={false}\n          onChangeText={handleUsername}\n          login={true}\n        />\n        <InputField\n          placeholder= \"Mot De Passe\"\n          secureTextEntry={true}\n          onChangeText={handlePassword}\n          login={true}\n        />\n        {pwdConfirm}\n      </View>\n      {ConnexionButton}\n      <MyButton label=\"Créer un compte\" primary={true} onPress={onPressCreate} />\n      {dejaInscrit}\n      {pwdOublie}\n    </View>\n  );\n}\n\nexport default LockScreen;\n\nconst styles = StyleSheet.create({\n  container: {\n    height: \"70%\",\n    alignItems: \"center\",\n    justifyContent: \"space-around\",\n    top: 64,\n  },\n  textPressable: {\n    fontSize: 18,\n    textDecorationLine: \"underline\",\n    color: \"#7858a6\",\n    fontFamily: \"Poppins\",\n  },\n});\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}