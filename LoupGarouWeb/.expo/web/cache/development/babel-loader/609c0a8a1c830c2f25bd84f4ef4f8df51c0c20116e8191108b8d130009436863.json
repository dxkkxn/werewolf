{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport { useState } from 'react';\nimport { useFonts } from 'expo-font';\nimport { useNavigation } from '@react-navigation/native';\nimport Card from \"./Card.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar ruler = require(\"../assets/ruler&pen.svg\");\nvar add = require(\"../assets/add-circle.svg\");\nvar avatar1 = require(\"../assets/images/avatar1.png\");\nexport default function Avatars(_ref) {\n  var route = _ref.route;\n  var navigation = useNavigation();\n  var _useFonts = useFonts({\n      'Poppins': require(\"../assets/fonts/Poppins-Regular.ttf\")\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    loaded = _useFonts2[0];\n  if (!loaded) {\n    return null;\n  }\n  var username = route.params.username;\n  var token = route.params.token;\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Text, {\n      style: styles.title,\n      children: \"Choisissez un Avatar\"\n    }), _jsx(TouchableOpacity, {\n      style: styles.arrowBox,\n      children: _jsx(Image, {\n        source: avatar1,\n        style: styles.image\n      })\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    height: \"80%\",\n    top: 64,\n    alignItems: 'center',\n    justifyContent: 'space-around'\n  },\n  title: {\n    color: '#ffffff',\n    fontSize: 28,\n    fontFamily: 'Poppins'\n  }\n});","map":{"version":3,"names":["StatusBar","StyleSheet","Text","View","Image","Pressable","TouchableOpacity","useState","useFonts","useNavigation","Card","jsx","_jsx","jsxs","_jsxs","ruler","require","add","avatar1","Avatars","_ref","route","navigation","_useFonts","_useFonts2","_slicedToArray","loaded","username","params","token","style","styles","container","children","title","arrowBox","source","image","create","height","top","alignItems","justifyContent","color","fontSize","fontFamily"],"sources":["/home/ennouaimi/PROJET/LoupGarouWeb/components/AvailableAvatars.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View, Image, Pressable , TouchableOpacity } from 'react-native';\nimport {useState} from 'react';\nimport { useFonts } from 'expo-font';\nimport { useNavigation } from '@react-navigation/native';\nimport Card from './Card.js';\n\nconst ruler = require(\"../assets/ruler&pen.svg\");\nconst add = require(\"../assets/add-circle.svg\");\nconst avatar1 = require(\"../assets/images/avatar1.png\"); \nexport default function Avatars({ route }) {\n  const navigation = useNavigation()\n  const [loaded] = useFonts({\n    'Poppins': require('../assets/fonts/Poppins-Regular.ttf'),\n  });\n\n  if (!loaded) {\n    return null;\n  }\n  const username = route.params.username;\n  const token = route.params.token;\n\treturn (\n\t\t<View style={styles.container}>\n\t\t\t<Text style={styles.title}>Choisissez un Avatar</Text>\n            <TouchableOpacity style={styles.arrowBox}>\n                <Image source={avatar1} style={styles.image}/>\n            </TouchableOpacity>\n        {/* <Card icon={avatar1} onPress={()=>navigation.navigate('Welcome', {username : username, token: token})}/> */}\n\t\t</View>\n\t);\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    height: \"80%\",\n    top: 64,\n    alignItems: 'center',\n    justifyContent: 'space-around',\n  },\n  title: {\n    color: '#ffffff',\n    fontSize: 28,\n    fontFamily: 'Poppins'\n  },\n})\n"],"mappings":";AAAA,SAASA,SAAS,QAAQ,iBAAiB;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,KAAA;AAAA,OAAAC,SAAA;AAAA,OAAAC,gBAAA;AAE5C,SAAQC,QAAQ,QAAO,OAAO;AAC9B,SAASC,QAAQ,QAAQ,WAAW;AACpC,SAASC,aAAa,QAAQ,0BAA0B;AACxD,OAAOC,IAAI;AAAkB,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAE7B,IAAMC,KAAK,GAAGC,OAAO,0BAA0B,CAAC;AAChD,IAAMC,GAAG,GAAGD,OAAO,2BAA2B,CAAC;AAC/C,IAAME,OAAO,GAAGF,OAAO,+BAA+B,CAAC;AACvD,eAAe,SAASG,OAAOA,CAAAC,IAAA,EAAY;EAAA,IAATC,KAAK,GAAAD,IAAA,CAALC,KAAK;EACrC,IAAMC,UAAU,GAAGb,aAAa,CAAC,CAAC;EAClC,IAAAc,SAAA,GAAiBf,QAAQ,CAAC;MACxB,SAAS,EAAEQ,OAAO,sCAAsC;IAC1D,CAAC,CAAC;IAAAQ,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAFKG,MAAM,GAAAF,UAAA;EAIb,IAAI,CAACE,MAAM,EAAE;IACX,OAAO,IAAI;EACb;EACA,IAAMC,QAAQ,GAAGN,KAAK,CAACO,MAAM,CAACD,QAAQ;EACtC,IAAME,KAAK,GAAGR,KAAK,CAACO,MAAM,CAACC,KAAK;EACjC,OACCf,KAAA,CAACX,IAAI;IAAC2B,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,GAC7BrB,IAAA,CAACV,IAAI;MAAC4B,KAAK,EAAEC,MAAM,CAACG,KAAM;MAAAD,QAAA,EAAC;IAAoB,CAAM,CAAC,EAC7CrB,IAAA,CAACN,gBAAgB;MAACwB,KAAK,EAAEC,MAAM,CAACI,QAAS;MAAAF,QAAA,EACrCrB,IAAA,CAACR,KAAK;QAACgC,MAAM,EAAElB,OAAQ;QAACY,KAAK,EAAEC,MAAM,CAACM;MAAM,CAAC;IAAC,CAChC,CAAC;EAAA,CAEvB,CAAC;AAET;AAEA,IAAMN,MAAM,GAAG9B,UAAU,CAACqC,MAAM,CAAC;EAC/BN,SAAS,EAAE;IACTO,MAAM,EAAE,KAAK;IACbC,GAAG,EAAE,EAAE;IACPC,UAAU,EAAE,QAAQ;IACpBC,cAAc,EAAE;EAClB,CAAC;EACDR,KAAK,EAAE;IACLS,KAAK,EAAE,SAAS;IAChBC,QAAQ,EAAE,EAAE;IACZC,UAAU,EAAE;EACd;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}